name: Run Tests

on:
  workflow_run:
    workflows: ["Terraform Deploy Pull Request"]
    types:
      - success

jobs:

  setup-and-run-tests:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: "username"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "database"
      POSTGRES_HOST: "localhost"
      AWS_ACCESS_KEY_ID: ""
      AWS_SECRET_ACCESS_KEY: ""
      AWS_REGION: ""
      AWS_BUCKET_NAME: ""
      AWS_SESSION_TOKEN: ""
      AWS_ACCOUNT_ID: ""
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: Run tests with coverage
        run: poetry run pytest --cov=src --cov-report=xml:coverage.xml --cov-report=term
